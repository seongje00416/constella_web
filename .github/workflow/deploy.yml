name: Constella Server CI/CD Pipeline

on:
  push:
    branches: [ main ]

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '22'

      - name: Install dependencies
        run: |
          if [ -f package-lock.json ]; then
            npm ci
          else
            npm install
          fi

      - name: Type check
        run: npx tsc --noEmit

      - name: Show project structure before build
        run: |
          echo "Current directory:"
          pwd
          echo "Directory contents:"
          ls -la
          echo "Package.json contents:"
          cat package.json

      - name: Build
        run: |
          npm run build
          echo "Build script exit code: $?"

      - name: Show project structure after build
        run: |
          echo "Current directory:"
          pwd
          echo "Directory contents:"
          ls -la
          echo "Dist directory contents (if exists):"
          ls -la dist || echo "Dist directory does not exist"

      - name: Check build output
        run: |
          if [ ! -d "dist" ]; then
            echo "Dist directory not found!"
            echo "Checking for other potential build directories:"
            find . -maxdepth 3 -type d -name "*dist*" -o -name "*build*"
            exit 1
          fi
          echo "Dist directory contents:"
          ls -la dist

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Deploy to EC2
        env:
          PRIVATE_KEY: ${{ secrets.EC2_SSH_PRIVATE_KEY }}
          HOST_DNS: ${{ secrets.EC2_HOST }}
          EC2_USER: ${{ secrets.EC2_USER }}
        run: |
          echo "$PRIVATE_KEY" > private_key && chmod 600 private_key
          BUILD_DIR=$(find . -maxdepth 1 -type d \( -name "dist" -o -name "build" \) | head -n 1)
          if [ -z "$BUILD_DIR" ]; then
            echo "No build directory found!"
            exit 1
          fi
          echo "Using build directory: $BUILD_DIR"
          scp -i private_key -o StrictHostKeyChecking=no -r $BUILD_DIR/* ${EC2_USER}@${HOST_DNS}:/var/www/html
          ssh -i private_key -o StrictHostKeyChecking=no ${EC2_USER}@${HOST_DNS} '
            sudo systemctl restart nginx
          '

      - name: Clean up
        if: always()
        run: rm -f private_key